generator client {
    provider = "prisma-client-js"   
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

// Update Database Table : npx prisma db push
model User {
    id          String @id @default(cuid())
    password    String
    info        UserInfo @relation(fields: [infoId], references: [id])
    infoId      String @unique
}

model Seller {
    id          String @id @default(cuid())
    password    String
    product     Product[]
    company     Company @relation(fields: [companyId], references: [id])
    companyId   String
    info        UserInfo @relation(fields: [infoId], references: [id])
    infoId      String @unique
    
}

model Company {
    id          String @id @default(cuid())
    name        String
    contract    String
    address     String
    seller      Seller[]

}

model ComCode {
    code    String @id 
    value   String
    useYn   Boolean
}


model Product {
    id      String  @id @default(cuid())
    name    String
    photo   String
    cost    Int
    amount  Int
    promo   Promotion[]    
    category1 String
    category2 String
    category3 String
    seller Seller @relation(fields: [sellerid], references: [id])
    sellerid String
    

}

model UserInfo {
    id          String  @id @default(cuid())
    seller      Seller?
    user        User?
    name        String
    email       String  @unique
    address1    String
    addrees2    String
    photo       String // BLob
    lastLogin   DateTime
    
}

model Promotion {
    id          String @id @default(cuid())
    name        String
    type        String 
    rate        Int?
    cost        Int?
    limitCost   Int?
    product     Product? @relation(fields: [productId], references: [id])
    productId   String?
    startDate   DateTime
    endDate     DateTime
    amount      Int?
}


